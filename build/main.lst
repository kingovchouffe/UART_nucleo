ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	Error_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	Error_Handler:
  25              	.LFB42:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint8_t  buffer = 2;
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 3


  90:Core/Src/main.c ****   MX_USART2_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  93:Core/Src/main.c ****   HAL_Delay(100);
  94:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   while (1)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****     /* USER CODE END WHILE */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 105:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(BOUTON_GPIO_Port,BOUTON_Pin))
 106:Core/Src/main.c ****     {
 107:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 108:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,&buffer,sizeof(buffer),100);
 109:Core/Src/main.c ****     HAL_Delay(500);
 110:Core/Src/main.c ****     }else{
 111:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 112:Core/Src/main.c ****     }
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   /* USER CODE END 3 */
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief System Clock Configuration
 119:Core/Src/main.c ****   * @retval None
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** void SystemClock_Config(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 131:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 4


 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 155:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 156:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE END 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void Error_Handler(void)
 171:Core/Src/main.c **** {
  27              		.loc 1 171 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 172:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 173:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 174:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 174 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 5


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 6


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 7


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax divided
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 175:Core/Src/main.c ****   while (1)
  49              		.loc 1 175 3 discriminator 1 view .LVU4
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****   }
  50              		.loc 1 177 3 discriminator 1 view .LVU5
 175:Core/Src/main.c ****   while (1)
  51              		.loc 1 175 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE42:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  62              		.fpu softvfp
  64              	SystemClock_Config:
  65              	.LFB41:
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  66              		.loc 1 122 1 view -0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 96
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 98B0     		sub	sp, sp, #96
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 104
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 123 3 view .LVU8
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 123 22 is_stmt 0 view .LVU9
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 8


  80 0004 3022     		movs	r2, #48
  81 0006 0021     		movs	r1, #0
  82 0008 0CA8     		add	r0, sp, #48
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 124:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  85              		.loc 1 124 3 is_stmt 1 view .LVU10
 124:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  86              		.loc 1 124 22 is_stmt 0 view .LVU11
  87 000e 1024     		movs	r4, #16
  88 0010 1022     		movs	r2, #16
  89 0012 0021     		movs	r1, #0
  90 0014 07A8     		add	r0, sp, #28
  91 0016 FFF7FEFF 		bl	memset
  92              	.LVL1:
 125:Core/Src/main.c **** 
  93              		.loc 1 125 3 is_stmt 1 view .LVU12
 125:Core/Src/main.c **** 
  94              		.loc 1 125 28 is_stmt 0 view .LVU13
  95 001a 1822     		movs	r2, #24
  96 001c 0021     		movs	r1, #0
  97 001e 01A8     		add	r0, sp, #4
  98 0020 FFF7FEFF 		bl	memset
  99              	.LVL2:
 130:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 100              		.loc 1 130 2 is_stmt 1 view .LVU14
 130:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 101              		.loc 1 130 35 is_stmt 0 view .LVU15
 102 0024 3223     		movs	r3, #50
 103 0026 0B93     		str	r3, [sp, #44]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 104              		.loc 1 132 3 is_stmt 1 view .LVU16
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 105              		.loc 1 132 30 is_stmt 0 view .LVU17
 106 0028 313B     		subs	r3, r3, #49
 107 002a 0E93     		str	r3, [sp, #56]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 108              		.loc 1 133 3 is_stmt 1 view .LVU18
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 109              		.loc 1 133 32 is_stmt 0 view .LVU19
 110 002c 1393     		str	r3, [sp, #76]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 111              		.loc 1 134 3 is_stmt 1 view .LVU20
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 112              		.loc 1 134 32 is_stmt 0 view .LVU21
 113 002e 1093     		str	r3, [sp, #64]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 114              		.loc 1 135 3 is_stmt 1 view .LVU22
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 115              		.loc 1 135 41 is_stmt 0 view .LVU23
 116 0030 0F94     		str	r4, [sp, #60]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 117              		.loc 1 136 3 is_stmt 1 view .LVU24
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 118              		.loc 1 136 43 is_stmt 0 view .LVU25
 119 0032 1194     		str	r4, [sp, #68]
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 9


 120              		.loc 1 137 3 is_stmt 1 view .LVU26
 138:Core/Src/main.c ****   {
 121              		.loc 1 138 3 view .LVU27
 138:Core/Src/main.c ****   {
 122              		.loc 1 138 7 is_stmt 0 view .LVU28
 123 0034 0BA8     		add	r0, sp, #44
 124 0036 FFF7FEFF 		bl	HAL_RCC_OscConfig
 125              	.LVL3:
 138:Core/Src/main.c ****   {
 126              		.loc 1 138 6 view .LVU29
 127 003a 0028     		cmp	r0, #0
 128 003c 17D1     		bne	.L7
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 129              		.loc 1 144 3 is_stmt 1 view .LVU30
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 130              		.loc 1 144 31 is_stmt 0 view .LVU31
 131 003e 0723     		movs	r3, #7
 132 0040 0793     		str	r3, [sp, #28]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 133              		.loc 1 146 3 is_stmt 1 view .LVU32
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 134              		.loc 1 146 34 is_stmt 0 view .LVU33
 135 0042 043B     		subs	r3, r3, #4
 136 0044 0893     		str	r3, [sp, #32]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 137              		.loc 1 147 3 is_stmt 1 view .LVU34
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 138              		.loc 1 147 35 is_stmt 0 view .LVU35
 139 0046 0023     		movs	r3, #0
 140 0048 0993     		str	r3, [sp, #36]
 148:Core/Src/main.c **** 
 141              		.loc 1 148 3 is_stmt 1 view .LVU36
 148:Core/Src/main.c **** 
 142              		.loc 1 148 36 is_stmt 0 view .LVU37
 143 004a 0A93     		str	r3, [sp, #40]
 150:Core/Src/main.c ****   {
 144              		.loc 1 150 3 is_stmt 1 view .LVU38
 150:Core/Src/main.c ****   {
 145              		.loc 1 150 7 is_stmt 0 view .LVU39
 146 004c 0121     		movs	r1, #1
 147 004e 07A8     		add	r0, sp, #28
 148 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 149              	.LVL4:
 150:Core/Src/main.c ****   {
 150              		.loc 1 150 6 view .LVU40
 151 0054 0028     		cmp	r0, #0
 152 0056 0CD1     		bne	.L8
 154:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 153              		.loc 1 154 3 is_stmt 1 view .LVU41
 154:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 154              		.loc 1 154 38 is_stmt 0 view .LVU42
 155 0058 0123     		movs	r3, #1
 156 005a 0193     		str	r3, [sp, #4]
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 157              		.loc 1 155 3 is_stmt 1 view .LVU43
 155:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 158              		.loc 1 155 38 is_stmt 0 view .LVU44
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 10


 159 005c 0023     		movs	r3, #0
 160 005e 0393     		str	r3, [sp, #12]
 156:Core/Src/main.c ****   {
 161              		.loc 1 156 3 is_stmt 1 view .LVU45
 156:Core/Src/main.c ****   {
 162              		.loc 1 156 7 is_stmt 0 view .LVU46
 163 0060 01A8     		add	r0, sp, #4
 164 0062 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 165              	.LVL5:
 156:Core/Src/main.c ****   {
 166              		.loc 1 156 6 view .LVU47
 167 0066 0028     		cmp	r0, #0
 168 0068 05D1     		bne	.L9
 160:Core/Src/main.c **** 
 169              		.loc 1 160 1 view .LVU48
 170 006a 18B0     		add	sp, sp, #96
 171              		@ sp needed
 172 006c 10BD     		pop	{r4, pc}
 173              	.L7:
 140:Core/Src/main.c ****   }
 174              		.loc 1 140 5 is_stmt 1 view .LVU49
 175 006e FFF7FEFF 		bl	Error_Handler
 176              	.LVL6:
 177              	.L8:
 152:Core/Src/main.c ****   }
 178              		.loc 1 152 5 view .LVU50
 179 0072 FFF7FEFF 		bl	Error_Handler
 180              	.LVL7:
 181              	.L9:
 158:Core/Src/main.c ****   }
 182              		.loc 1 158 5 view .LVU51
 183 0076 FFF7FEFF 		bl	Error_Handler
 184              	.LVL8:
 185              		.cfi_endproc
 186              	.LFE41:
 188              		.section	.text.main,"ax",%progbits
 189              		.align	1
 190              		.global	main
 191              		.syntax unified
 192              		.code	16
 193              		.thumb_func
 194              		.fpu softvfp
 196              	main:
 197              	.LFB40:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 198              		.loc 1 66 1 view -0
 199              		.cfi_startproc
 200              		@ Volatile: function does not return.
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 208              		.loc 1 74 3 view .LVU53
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 11


 209 0002 FFF7FEFF 		bl	HAL_Init
 210              	.LVL9:
  81:Core/Src/main.c **** 
 211              		.loc 1 81 3 view .LVU54
 212 0006 FFF7FEFF 		bl	SystemClock_Config
 213              	.LVL10:
  88:Core/Src/main.c ****   MX_USART1_UART_Init();
 214              		.loc 1 88 3 view .LVU55
 215 000a FFF7FEFF 		bl	MX_GPIO_Init
 216              	.LVL11:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 217              		.loc 1 89 3 view .LVU56
 218 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 219              	.LVL12:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 220              		.loc 1 90 3 view .LVU57
 221 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 222              	.LVL13:
  92:Core/Src/main.c ****   HAL_Delay(100);
 223              		.loc 1 92 3 view .LVU58
 224 0016 134C     		ldr	r4, .L14
 225 0018 0821     		movs	r1, #8
 226 001a 2000     		movs	r0, r4
 227 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 228              	.LVL14:
  93:Core/Src/main.c ****   HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 229              		.loc 1 93 3 view .LVU59
 230 0020 6420     		movs	r0, #100
 231 0022 FFF7FEFF 		bl	HAL_Delay
 232              	.LVL15:
  94:Core/Src/main.c ****   /* USER CODE END 2 */
 233              		.loc 1 94 3 view .LVU60
 234 0026 0821     		movs	r1, #8
 235 0028 2000     		movs	r0, r4
 236 002a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 237              	.LVL16:
 238 002e 03E0     		b	.L11
 239              	.L12:
 111:Core/Src/main.c ****     }
 240              		.loc 1 111 7 view .LVU61
 241 0030 0821     		movs	r1, #8
 242 0032 0C48     		ldr	r0, .L14
 243 0034 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 244              	.LVL17:
 245              	.L11:
  99:Core/Src/main.c ****   {
 246              		.loc 1 99 3 view .LVU62
 105:Core/Src/main.c ****     {
 247              		.loc 1 105 5 view .LVU63
 105:Core/Src/main.c ****     {
 248              		.loc 1 105 10 is_stmt 0 view .LVU64
 249 0038 9020     		movs	r0, #144
 250 003a 0821     		movs	r1, #8
 251 003c C005     		lsls	r0, r0, #23
 252 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 253              	.LVL18:
 105:Core/Src/main.c ****     {
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 12


 254              		.loc 1 105 8 view .LVU65
 255 0042 0028     		cmp	r0, #0
 256 0044 F4D1     		bne	.L12
 107:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,&buffer,sizeof(buffer),100);
 257              		.loc 1 107 5 is_stmt 1 view .LVU66
 258 0046 0821     		movs	r1, #8
 259 0048 0648     		ldr	r0, .L14
 260 004a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 261              	.LVL19:
 108:Core/Src/main.c ****     HAL_Delay(500);
 262              		.loc 1 108 5 view .LVU67
 263 004e 6423     		movs	r3, #100
 264 0050 0122     		movs	r2, #1
 265 0052 0549     		ldr	r1, .L14+4
 266 0054 0548     		ldr	r0, .L14+8
 267 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 268              	.LVL20:
 109:Core/Src/main.c ****     }else{
 269              		.loc 1 109 5 view .LVU68
 270 005a FA20     		movs	r0, #250
 271 005c 4000     		lsls	r0, r0, #1
 272 005e FFF7FEFF 		bl	HAL_Delay
 273              	.LVL21:
 274 0062 E9E7     		b	.L11
 275              	.L15:
 276              		.align	2
 277              	.L14:
 278 0064 00040048 		.word	1207960576
 279 0068 00000000 		.word	.LANCHOR0
 280 006c 00000000 		.word	huart1
 281              		.cfi_endproc
 282              	.LFE40:
 284              		.global	buffer
 285              		.section	.data.buffer,"aw"
 286              		.set	.LANCHOR0,. + 0
 289              	buffer:
 290 0000 02       		.byte	2
 291              		.text
 292              	.Letext0:
 293              		.file 3 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc
 294              		.file 4 "c:\\users\\pierre-anthony\\.vscode\\extensions\\buzzyelectronics.stm-helper-1.2.9\\armgcc
 295              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 296              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 297              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 298              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 299              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 300              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 301              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 302              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 303              		.file 13 "Core/Inc/usart.h"
 304              		.file 14 "Core/Inc/gpio.h"
 305              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 306              		.file 16 "<built-in>"
ARM GAS  C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:16     .text.Error_Handler:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:24     .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:57     .text.SystemClock_Config:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:64     .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:189    .text.main:0000000000000000 $t
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:196    .text.main:0000000000000000 main
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:278    .text.main:0000000000000064 $d
C:\Users\PIERRE~1\AppData\Local\Temp\ccdHWGrz.s:289    .data.buffer:0000000000000000 buffer

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_ReadPin
HAL_UART_Transmit
huart1
